# x-keyboard

. ../func
. ../build.conf

#URL=http://distro.ibiblio.org/puppylinux/sources/m
PKG=x-keyboard
VER=0.2
#COMP=tar.gz
DESC="wrappers for a virtual keyboard. Supports xvkbd and cellwriter"
DEPS=+xvkbd
CAT=Desktop
DESKTOP=x-keyboard.desktop
BUILD=
CWD=$(pwd)
[ -z "$MWD" ] && MWD=$(dirname $CWD)	
[ -z "$BUILD" ] && BUILD=$DEF_BUILD
[ -f "$DESKTOP" ] || DESKTOP=not
[ -z "$DEPS" ] && DEPS=

ARCH=$(uname -m)
case $ARCH in
 *64) 	LIBDIR=$LIBCONF64 ;;
 arm*)	LIBDIR=$LIBCONFarm;;
 *) 	LIBDIR=$LIBCONF32 ;;
esac

build() {
	make
	[ "$?" -eq 0 ] || exit
	strip --strip-unneeded x-key-status #strip exec
	#SPECIAL
	install -d -m 0755 ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/bin
	for exec in x-keyboard x_key_status_start x-key-status; do 
		install -m 0755 $exec ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/bin
	done
	install -d -m 0755 ./${PKG}-${VER}-${ARCH}_${BUILD}/root/.config/autostart
	install -m 0644 x_key_status.desktop ./${PKG}-${VER}-${ARCH}_${BUILD}/root/.config/autostart/
	install -d -m 0755 ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/doc/nls/${PKG}
	install -m 0644 po/*.pot ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/doc/nls/${PKG}/
	make clean
}
	
package() {
	# add this recipe
	install -d -m 0755 ./${PKG}_DEV-${VER}-${ARCH}_${BUILD}/usr/src/dev
	cat ${PKG}.pbuild > ./${PKG}_DEV-${VER}-${ARCH}_${BUILD}/usr/src/dev/${PKG}-build-recipe
	if [ -f "$DESKTOP" ];then
		install -d -m 0755 ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/applications
		cat $DESKTOP > ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/applications/$DESKTOP
	fi
	# delete any icon cache or library cache
	find ./${PKG}-${VER}-${ARCH}_${BUILD} -type f -name '*cache' -delete
	[ -f ./pinstall.sh ] && install -m 0755 pinstall.sh ./${PKG}-${VER}-${ARCH}_${BUILD}/
	[ -f ./puninstall.sh ] && install -m 0755 puninstall.sh ./${PKG}-${VER}-${ARCH}_${BUILD}/
	for p in $(ls|grep "\-${ARCH}"|grep -v "files$") ; do
		case $p in
			*_DEV*) DESC="$PKG development"; DEPS=+${PKG} ;;
			*_DOC*) DESC="$PKG documentation"; DEPS=+${PKG} ;;
			*_NLS*) DESC="$PKG locales"; DEPS=+${PKG} ;;
		esac	
		echo "packaging $p"	
		dir2pet -x -s -w="$DESC" -d="$DEPS" -c="$CAT" -p=${p} 2>&1 >/dev/null
		rm -r $p
		mv ${p}.pet ../0pets_out
	done
	#rm -r ${PKG}-install
	#rm -r ${PKG}-${VER}
	#mv -f *.files ../0logs
	make clean #cleanup
	echo "done!"
}

# main
#retrieve ${PKG}-${VER}.${COMP}
#extract ${PKG}-${VER}.${COMP}
build
package	
